#
# Server rules
#
input(type="imudp" port="514" ruleset="remote")
$AllowedSender UDP, \
{% for host in groups['all'] %}
  {{ hostvars[host].ip }}{{ ', \\' if not loop.last else '' }}
{% endfor %}
input(type="imtcp" port="514" ruleset="remote")
$AllowedSender TCP, \
{% for host in groups['all'] %}
  {{ hostvars[host].ip }}{{ ", \\" if not loop.last else "" }}
{% endfor %}
template(
  name="remoteLogFile"
  type="string"
  string="/var/log/rsyslog/%HOSTNAME%/%PROGRAMNAME%.log"
)
template(name="elasticSearchSyslog" type="list" option.json="on") {
  constant(value="{")
  constant(value="\"@timestamp\":\"")
    property(name="timereported" dateFormat="rfc3339")
  constant(value="\",\"host\":\"")
    property(name="hostname")
  constant(value="\",\"severity-num\":")
    property(name="syslogseverity")
  constant(value=",\"facility-num\":")
    property(name="syslogfacility")
  constant(value=",\"severity\":\"")
    property(name="syslogseverity-text")
  constant(value="\",\"facility\":\"")
    property(name="syslogfacility-text")
  constant(value="\",\"syslogtag\":\"")
    property(name="syslogtag")
  constant(value="\",\"programname\":\"")
    property(name="programname")
  constant(value="\",\"message\":\"")
    property(name="msg")
  constant(value="\"}")
}
template(
  name="elasticSearchIndexNginx"
  type="string"
  string="log-nginx-%$YEAR%.%$MONTH%.%$DAY%"
)
ruleset(name="remote") {
  action(type="omfile" dynaFile="remoteLogFile")
  if $programname startswith "nginx" then {
    action(
      esVersion.major="8"
      type="omelasticsearch"
      server="{{ elasticsearch_server }}:9200"
      usehttps="on"
      allowunsignedcerts="on"
      skipverifyhost="on"
      uid="{{ elasticsearch_user }}"
      pwd="{{ elasticsearch_password }}"
      template="elasticSearchSyslog"
      searchIndex="elasticSearchIndexNginx"
      dynSearchIndex="on"
      bulkmode="on"
      errorfile="/var/log/rsyslog-omelasticsearch.log"
    )
  }
  stop
}
